import { RolesBuilder } from 'nest-access-control';
import { Role } from './user/entities/roles.enum';

export const roles: RolesBuilder = new RolesBuilder();

roles
  .grant(Role.PRINCIPAL)
  .readOwn('contact')
  .createOwn('contact')
  .updateOwn('contact')
  .deleteOwn('contact')
  .readOwn('group')
  .createOwn('group')
  .updateOwn('group')
  .deleteOwn('group')
  .readOwn('team-member')
  .createOwn('team-member')
  .updateOwn('team-member')
  .deleteOwn('team-member')
  .readOwn('teams')
  .updateOwn('teams')
  .deleteOwn('teams')
  .createOwn('teams')
  .readOwn('wallet')
  .deleteOwn('wallet')
  .updateAny('wallet')
  .createAny('wallet')
  .readOwn('analytics')
  .deleteOwn('analytics')
  .updateOwn('analytics')
  .createOwn('analytics')
  .readOwn('wallet')
  .updateOwn('wallet')
  .deleteOwn('wallet')
  .createOwn('wallet')
  .createOwn('sender-id')
  .readOwn('sender-id')
  .updateOwn('sender-id')
  .deleteOwn('sender-id')
  .createOwn('apikey')
  .readOwn('apikey')
  .updateOwn('apikey')
  .deleteOwn('apikey')
  .createOwn('message')
  .readOwn('message')
  .updateOwn('message')
  .deleteOwn('message')
  .createOwn('campaign')
  .readOwn('campaign')
  .updateOwn('campaign')
  .deleteOwn('campaign');

roles
  .grant(Role.ADMIN)
  .readOwn('team-member')
  .createOwn('team-member')
  .updateOwn('team-member')
  .deleteOwn('team-member')
  .readOwn('teams')
  .updateOwn('teams')
  .deleteOwn('teams')
  .createOwn('teams')
  .readOwn('analytics')
  .deleteOwn('analytics')
  .updateOwn('analytics')
  .createOwn('analytics')
  .createOwn('apikey')
  .readOwn('apikey')
  .updateOwn('apikey')
  .deleteOwn('apikey')
  .updateOwn('apikey')
  .deleteOwn('apikey')
  .createOwn('message')
  .readOwn('message')
  .updateOwn('message')
  .deleteOwn('message')
  .createOwn('campaign')
  .readOwn('campaign')
  .updateOwn('campaign')
  .deleteOwn('campaign')
  .readOwn('contact')
  .createOwn('contact')
  .updateOwn('contact')
  .deleteOwn('contact')
  .readOwn('group')
  .createOwn('group')
  .updateOwn('group')
  .deleteOwn('group')
  .createOwn('sender-id')
  .readOwn('sender-id')
  .updateOwn('sender-id')
  .deleteOwn('sender-id')
  .readOwn('wallet')
  .updateOwn('wallet')
  .deleteOwn('wallet')
  .createOwn('wallet');

roles
  .grant(Role.PRESIDENT)
  .createOwn('message')
  .readOwn('message')
  .updateOwn('message')
  .deleteOwn('message')
  .createOwn('campaign')
  .readOwn('campaign')
  .updateOwn('campaign')
  .deleteOwn('campaign');

roles
  .grant(Role.FINANCIAL_SECRETARY)
  .readOwn('team-member')
  .createOwn('team-member')
  .updateOwn('team-member')
  .deleteOwn('team-member')
  .readOwn('teams')
  .updateOwn('teams')
  .deleteOwn('teams')
  .createOwn('teams');

roles
  .grant(Role.SECRETARY)
  .readOwn('team-member')
  .createOwn('team-member')
  .updateOwn('team-member')
  .deleteOwn('team-member')
  .readOwn('teams')
  .updateOwn('teams')
  .deleteOwn('teams')
  .createOwn('teams');

roles
  .grant(Role.MEMBER)
  .readOwn('team-member')
  .createOwn('team-member')
  .updateOwn('team-member')
  .deleteOwn('team-member')
  .readOwn('teams')
  .updateOwn('teams')
  .deleteOwn('teams')
  .createOwn('teams');
